---
import type { GetStaticPaths } from "astro";
import api from "@/services/api";
import Layout from "src/layouts/Layout.astro";
import { Image } from "astro:assets";
import HeartFilled from "@/assets/line-md--heart-filled.svg";
import HeartOutline from "@/assets/line-md--heart.svg";

export const getStaticPaths = (async () => {
  const [error, data] = await api.getPlayers();
  if (error) throw new Error("Error al pedir los jugadores");

  const { response } = data;

  return response.map(({ player }) => {
    return { params: { id: player.id }, props: { ...player } };
  });
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const { name, photo } = Astro.props;
---

<Layout title={name}>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <header>
      <button onclick="history.back()" class="text-blue-500 align-top"
        >Regresar</button
      >
      <button
        id="btn-favorite"
        class="ml-4 hover:animate-pulse"
        data-name={name}
        data-id={id}
      >
        <HeartOutline data-outline class="text-red-600" />
        <HeartFilled data-filled class="text-red-600 hidden" />
      </button>
    </header>
    <div>
      <h1 class="text-5xl mb-4 capitalize">{name}</h1>
      <Image
        transition:name={`${id}-image`}
        class="mx-auto"
        src={photo}
        alt={`Profile photo of ${name}`}
        height={150}
        width={150}
      />
    </div>
  </section>
</Layout>

<script>
  document.addEventListener("astro:before-preparation", () => {
    console.log("Before preparation");
  });

  document.addEventListener("astro:after-preparation", () => {
    console.log("After preparation");
  });

  document.addEventListener("astro:before-swap", () => {
    console.log("Before swap");
  });

  document.addEventListener("astro:after-swap", () => {
    console.log("After swap");
  });

  type Player = {
    id: string;
    name: string;
  };

  const handlePageLoad = () => {
    const btnFavorite = document.getElementById(
      "btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavorite) return;

    const heartFilled = btnFavorite.querySelector(
      "[data-filled]"
    ) as HTMLElement;
    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;

    const { name, id } = btnFavorite.dataset as Player;

    let favoritePlayers = JSON.parse(
      localStorage.getItem("favorite-players") ?? "[]"
    ) as Player[];

    const isFavorite = favoritePlayers.some((player) => player.id === id);

    const toggleFavorite = (isFavorite: boolean) => {
      if (isFavorite) {
        heartFilled.classList.remove("hidden");
        heartOutline.classList.add("hidden");
      } else {
        heartFilled.classList.add("hidden");
        heartOutline.classList.remove("hidden");
      }
    };

    toggleFavorite(isFavorite);

    localStorage.setItem("favorite-players", JSON.stringify(favoritePlayers));

    btnFavorite.addEventListener("click", () => {
      const isFavorite = favoritePlayers.some((player) => player.id === id);

      if (isFavorite) {
        favoritePlayers = favoritePlayers.filter((player) => player.id !== id);
      } else {
        favoritePlayers.push({ id, name });
      }
      toggleFavorite(!isFavorite);

      localStorage.setItem("favorite-players", JSON.stringify(favoritePlayers));
    });
  };

  // Esto se debe al view transitions
  document.addEventListener("astro:page-load", handlePageLoad);
</script>
